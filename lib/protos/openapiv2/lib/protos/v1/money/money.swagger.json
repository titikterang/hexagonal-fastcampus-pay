{
  "swagger": "2.0",
  "info": {
    "title": "Fast Campus Pay (Money API Endpoint)",
    "version": "1.0",
    "contact": {
      "name": "Fast Campus Payment",
      "url": "https://github.com/titikterang",
      "email": "azwar.nrst@gmail.com"
    }
  },
  "tags": [
    {
      "name": "MoneyService"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/money/balance": {
      "get": {
        "summary": "Get User Balance",
        "operationId": "GetUserBalance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1UserBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "money"
        ]
      }
    },
    "/v1/money/private/balance": {
      "get": {
        "summary": "Get User Balance Private API",
        "operationId": "GetUserBalancePrivate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1UserBalancePrivateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "accountNumber",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "money"
        ]
      },
      "post": {
        "summary": "Update Balance",
        "operationId": "UpdateUserBalance",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/v1UpdateBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateBalancePayload"
            }
          }
        ],
        "tags": [
          "money"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typeMoney": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "description": "Represents an amount of money with its currency type."
    },
    "v1UpdateBalancePayload": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/typeMoney"
        }
      }
    },
    "v1UpdateBalanceResponse": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/typeMoney"
        }
      }
    },
    "v1UserBalancePrivateResponse": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/typeMoney"
        }
      }
    },
    "v1UserBalanceResponse": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string"
        },
        "balance": {
          "type": "string"
        }
      }
    }
  }
}
